# Generated by Django 3.2.2 on 2021-06-05 20:23

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import pages.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Administrator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=15, verbose_name='Имя администратора')),
                ('surname', models.CharField(max_length=15, verbose_name='Фамилия администратора')),
                ('email', models.EmailField(max_length=25, validators=[django.core.validators.EmailValidator], verbose_name='Email администратора')),
                ('telephone', models.CharField(default='+', max_length=20, validators=[pages.models.phone_number], verbose_name='Email администратора')),
            ],
            options={
                'verbose_name': 'Администратор',
                'verbose_name_plural': 'Администраторы',
                'ordering': ['name', 'surname'],
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=15, verbose_name='Имя клиента')),
                ('surname', models.CharField(max_length=15, verbose_name='Фамилия клиента')),
                ('email', models.EmailField(max_length=25, validators=[django.core.validators.EmailValidator], verbose_name='Email клиента')),
                ('telephone', models.CharField(default='+', max_length=20, validators=[pages.models.phone_number], verbose_name='Номер телефона клиента')),
            ],
            options={
                'verbose_name': 'Клиент',
                'verbose_name_plural': 'Клиенты',
                'ordering': ['name', 'surname'],
            },
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=15, verbose_name='Имя доктора')),
                ('surname', models.CharField(max_length=15, verbose_name='Фамилия доктора')),
                ('email', models.EmailField(max_length=25, validators=[django.core.validators.EmailValidator], verbose_name='Email доктора')),
                ('telephone', models.CharField(max_length=20, validators=[pages.models.phone_number], verbose_name='Email доктора')),
            ],
            options={
                'verbose_name': 'Доктор',
                'verbose_name_plural': 'Доктора',
                'ordering': ['name', 'surname'],
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=15, verbose_name='Название статуса')),
                ('description', models.CharField(blank=True, max_length=180, null=True, verbose_name='Описание статуса')),
            ],
            options={
                'verbose_name': 'Статус',
                'verbose_name_plural': 'Статусы',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ReceptionDay',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Дата рабочего дня')),
                ('start_time', models.TimeField(verbose_name='Начало дня')),
                ('end_time', models.TimeField(verbose_name='Конец дня')),
                ('additional_info', models.TextField(verbose_name='Доп. инфо')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='pages.doctor', verbose_name='Доктор')),
            ],
            options={
                'verbose_name': 'День приема',
                'verbose_name_plural': 'Дни приемов',
                'ordering': ['date', 'doctor', 'start_time', 'end_time'],
            },
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appointment_time', models.TimeField(verbose_name='Время записи')),
                ('date_last_change', models.DateField(verbose_name='Время последнего изменения')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='pages.client', verbose_name='Клиент')),
                ('reception_day', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='pages.receptionday', verbose_name='День приема')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='pages.status', verbose_name='Статус записи')),
            ],
            options={
                'verbose_name': 'Запись на прием',
                'verbose_name_plural': 'Записи на прием',
                'ordering': ['reception_day', 'appointment_time', 'client'],
            },
        ),
        migrations.CreateModel(
            name='AppHasAdmin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('responsibility', models.CharField(max_length=200, verbose_name='Ответственность за')),
                ('administrator', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='pages.administrator', verbose_name='Администратор')),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='pages.appointment', verbose_name='Запись на прием')),
            ],
            options={
                'verbose_name': 'Администратор к записи на прием',
                'verbose_name_plural': 'Администраторы к записям на прием',
                'ordering': ['administrator', 'appointment'],
            },
        ),
    ]
